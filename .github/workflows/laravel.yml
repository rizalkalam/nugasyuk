name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - run: echo "Deploy to production server"
      - direktori:
        run: "/home/nugasyuk/www"
      - git_url_tanpa_htttp:
        run: "github.com/rizalkalam/nugasyuk"
      - clone_key:
        run: "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"
      - user:
        run: "deployer"
      - ip:
        run: "103.193.176.129"
      - file_env:
        run: $FILE_ENV
      - file_htaccess:
        run: $FILE_HTACCESS
      - run: "which ssh-agent || ( apt-get install openssh-client )"
      - run: eval $(ssh-agent -s)
      - run: echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      - run: mkdir -p ~/.ssh
      - run: chmod 700 ~/.ssh
      - run: ssh-keyscan $VAR_IP >> ~/.ssh/known_hosts
      - run: chmod 644 ~/.ssh/known_hosts
      - run: '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - run: echo "$VAR_FILE_HTACCESS"
    step2: 
      - run: ssh $VAR_USER@$VAR_IP "git config --global safe.directory '*'"
      - run: ssh $VAR_USER@$VAR_IP "if [ ! -d $VAR_DIREKTORI/.git ]; then echo 'Project belum ditemukan di direktori $VAR_DIREKTORI' && cd $VAR_DIREKTORI && git clone https://oauth2:$VAR_CLONE_KEY@$VAR_GIT_URL_TANPA_HTTP .; fi"
      - run: ssh $VAR_USER@$VAR_IP "cd $VAR_DIREKTORI && git pull origin main && exit"
      - run: ssh $VAR_USER@$VAR_IP "if [ -d $VAR_DIREKTORI/.env ]; then rm .env; fi"
      - run: ssh $VAR_USER@$VAR_IP "cd $VAR_DIREKTORI && echo '$VAR_FILE_ENV' >> .env"
      - run: ssh $VAR_USER@$VAR_IP "if [ -d $VAR_DIREKTORI/.htaccess ]; then rm .htaccess; fi"
      - run: ssh $VAR_USER@$VAR_IP "cd $VAR_DIREKTORI && echo '$VAR_FILE_HTACCESS' >> .htaccess"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver composer validate --strict"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver composer install --ignore-platform-req=ext-gd"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver composer fund"
      # - ssh $VAR_USER@$VAR_IP "dock
      # - ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan queue:flush"
      # - ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan queue:clear"
      # - ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan migrate --seed"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan migrate:fresh --seed"
      # - ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan db:seed"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan jwt:secret"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan key:generate"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan cache:clear"
      - run: ssh $VAR_USER@$VAR_IP "docker exec webserver php artisan storage:link"
      - run: echo "UPDATE SUCCESS!"